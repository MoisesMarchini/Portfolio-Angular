.wrapper{
  --card-ideal-width: 200px
  display: flex;
  flex-direction: column;
}

.cards-container{
  --lines-animation-duration: 6s;
  --lines-height: 3px;
  --color-1: rgba(var(--app-body-color-rgb), 0.85);
  --color-2: rgba(var(--app-body-color-rgb), 0.75);

  --color-active-1: rgba(var(--app-primary-color-rgb), 0.65);
  --color-active-2: rgba(var(--app-primary-color-rgb), 0.5);


  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(clamp(8rem, var(--card-ideal-width), 100%), 1fr));
  grid-gap: 1rem;
}

.card{
  --transition: var(--default-anim-duration) ease;
  border: 2px solid var(--app-body-color);
  border-radius: 4px;
  display: flex;
  flex-direction: column;
  transition:
    transform var(--transition),
    opacity var(--transition),
    border-radius var(--transition),
    border var(--transition);
}

.card.card-project{
  min-height: 200px;
  justify-content: flex-end;

  .card-image-bg{
    height: 100%;
    width: 100%;
    object-fit: cover;
    transition: var(--default-anim-duration) ease;
    filter: brightness(0.5) grayscale(0.75);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: bgAnimated 12s infinite alternate ease-in-out;
    animation-play-state: paused;
  }

  .card-content{
    z-index: 1;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    align-items: center;
    justify-content: center;
    .card-tags{
      font-size: 1.5rem;
      color: var(--app-primary-color);
      opacity: .5;
    }
    .btn{
      font-size: .8rem;
      transition: var(--default-anim-duration) ease;
      opacity: 0;
      transform: translateY(100px);
      border: 0;
      font-weight: 600;
      text-transform: uppercase;
    }
  }

  &::before{
    content: '';
    position: absolute;
    opacity: 0;
    background: linear-gradient(
      var(--color-active-1),
      var(--color-active-1) var(--lines-height),
      var(--color-active-2) var(--lines-height),
      var(--color-active-2) calc(var(--lines-height) *2),
    );
    background-size: 100% calc(var(--lines-height) *2);
    width: 100%;
    height: 100%;
    transition: opacity calc(var(--default-anim-duration) / 2);
    animation: linesAnimated var(--lines-animation-duration) infinite forwards linear;
    animation-play-state: paused;
  }
}

.card.card-project:hover{
  border-radius: 0;
  border: 2px solid var(--app-primary-color);
  transform: scale(1.05);
  z-index: 1;


  .card-image-bg{
    filter: brightness(1) grayscale(0);
    animation-play-state: running;
  }

  .card-content{
    background-color: transparent;
    .card-title, .card-tags{
      pointer-events: none;
      opacity: 0;
      transform: translateY(-100px);
    }
    .btn{
      opacity: 1;
      transform: translateY(0px);
    }
  }
}

.card.card-skill{
  display: grid;
  place-items: center;
  background: white;
  color: var(--app-body-bg);
  .card-content{
    display: grid;
    place-items: center;
    z-index: 1;
    i {
      font-size: 3rem;
      width: 4rem;
      height: 4rem;
      display: grid;
      place-content: center;
    }
    h3{
      position: absolute;
      transform: translateY(60px);
    }
  }

  &::before, &::after{
    content: '';
    position: absolute;
    background: linear-gradient(
      var(--color-active-1),
      var(--color-active-1) var(--lines-height),
      var(--color-active-2) var(--lines-height),
      var(--color-active-2) calc(var(--lines-height) *2),
    );
    background-size: 100% calc(var(--lines-height) *2);
    width: 100%;
    height: 100%;
    transition: opacity calc(var(--default-anim-duration) / 2);
    animation: linesAnimated var(--lines-animation-duration) infinite forwards linear;
    animation-play-state: paused;
  }

  &::before{
    background: linear-gradient(
      var(--color-1),
      var(--color-1) var(--lines-height),
      var(--color-2) var(--lines-height),
      var(--color-2) calc(var(--lines-height) *2),
    );
  }

  &::after{
    opacity: 0;
    background: linear-gradient(
      var(--color-active-1),
      var(--color-active-1) var(--lines-height),
      var(--color-active-2) var(--lines-height),
      var(--color-active-2) calc(var(--lines-height) *2),
    );
  }

  &:hover{
    animation-play-state: running;
    &::after, &::before{
      opacity: 1;
      animation-play-state: running;
    }
  }
}

@keyframes bgAnimated {
  from{
    object-position: 0% 0%;
  }
  to{
    object-position: 100% 100%;
  }
}

@keyframes linesAnimated {
  from{
    background-position: 0% 0%;
  }
  to{
    background-position: 0% -100%;
  }
}
